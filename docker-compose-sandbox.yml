name: slurpit-netbox
services:
  netbox: &netbox
    #image: registry.gitlab.com/slurpit.io/slurpit-netbox-docker:latest
    build: 
      context: ./
      dockerfile: Dockerfile.dev
    depends_on:
    - postgres
    - redis
    - redis-cache
    env_file: docker/env/netbox.env
    user: 'unit:root'
    healthcheck:
      start_period: 300s
      timeout: 3s
      interval: 15s
      test: "curl -f http://localhost:8080/api/ || exit 1"
    volumes:
    - ./volumes/netbox-media-files:/opt/netbox/netbox/media:rw
    - ./volumes/netbox-reports-files:/opt/netbox/netbox/reports:rw
    - ./volumes/netbox-scripts-files:/opt/netbox/netbox/scripts:rw
    - ./src/slurpit_netbox:/opt/netbox/netbox/slurpit_netbox:r
    networks:
      - netbox_slurpit-network
    
  netbox-worker:
    <<: *netbox
    depends_on:
      netbox:
        condition: service_healthy
    command:
    - /opt/netbox/venv/bin/python
    - /opt/netbox/netbox/manage.py
    - rqworker
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: "ps -aux | grep -v grep | grep -q rqworker || exit 1"
    networks:
      - netbox_slurpit-network

  netbox-housekeeping:
    <<: *netbox
    depends_on:
      netbox:
        condition: service_healthy
    command:
    - /opt/netbox/housekeeping.sh
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: "ps -aux | grep -v grep | grep -q housekeeping || exit 1"
    networks:
      - netbox_slurpit-network

  # postgres
  postgres:
    image: docker.io/postgres:15-alpine
    env_file: docker/env/postgres.env
    volumes:
    - ./volumes/netbox-postgres-data:/var/lib/postgresql/data
    networks:
    - netbox_slurpit-network

  # redis
  redis:
    image: docker.io/redis:7-alpine
    command:
    - sh
    - -c # this is to evaluate the $REDIS_PASSWORD from the env
    - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: docker/env/redis.env
    volumes:
    - ./volumes/netbox-redis-data:/data
    networks:
    - netbox_slurpit-network
  redis-cache:
    image: docker.io/redis:7-alpine
    command:
    - sh
    - -c # this is to evaluate the $REDIS_PASSWORD from the env
    - redis-server --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: docker/env/redis-cache.env
    volumes:
    - ./volumes/netbox-redis-cache-data:/data
    networks:
    - netbox_slurpit-network

  # SLURPIT
  slurpit-warehouse-netbox:
    image: slurpit/warehouse:latest
    container_name: slurpit-warehouse-netbox
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/services"]
      interval: 10s
      timeout: 10s
      retries: 360
    networks:
      - netbox_slurpit-network
    environment:
      TZ: Europe/Amsterdam
      WAREHOUSE_CALLBACK_SCANNER_URL: https://slurpit-portal-netbox/callback/scanner
      WAREHOUSE_CALLBACK_SCANNER_TOKEN:
      WAREHOUSE_CALLBACK_SCRAPER_URL: https://slurpit-portal-netbox/callback/scraper
      WAREHOUSE_CALLBACK_SCRAPER_TOKEN:
    volumes:
      - ./db/warehouse:/var/lib/mongodb
      - ./logs/warehouse/mongodb:/var/log/mongodb
      - ./logs/warehouse:/logs
    restart: always

  slurpit-scraper-netbox:
    image: slurpit/scraper:latest
    container_name: slurpit-scraper-netbox
    depends_on:
      slurpit-warehouse-netbox:
        condition: service_healthy
    networks:
      - netbox_slurpit-network
    environment:
      TZ: Europe/Amsterdam
      SCRAPER_TIMEOUT: 20
      SCRAPER_POOLSIZE: 8
      SCRAPER_WAREHOUSE_URL: http://slurpit-warehouse-netbox
    volumes:
      - ./logs/scraper:/logs
    restart: always

  slurpit-scanner-netbox:
    image: slurpit/scanner:latest
    container_name: slurpit-scanner-netbox
    depends_on:
      slurpit-warehouse-netbox:
        condition: service_healthy
    networks:
      - netbox_slurpit-network
    environment:
      TZ: Europe/Amsterdam
      SCANNER_POOLSIZE: 8
      SCANNER_TIMEOUT: 10
      SCANNER_WAREHOUSE_URL: http://slurpit-warehouse-netbox
    restart: always

  slurpit-portal-netbox:
    image: slurpit/portal:latest
    container_name: slurpit-portal-netbox
    ports:
      - "80:80"
      - "443:443"
    networks:
      - netbox_slurpit-network
    environment:
      TZ: Europe/Amsterdam
      PORTAL_BASE_URL: https://sandbox.slurpit.io
      PORTAL_WAREHOUSE_URL: http://slurpit-warehouse-netbox
    volumes:
      - ./logs/nginx:/var/log/nginx/
      - ./logs/mysql:/var/log/mysql/
      - ./logs/php:/var/log/php/
      - ./certs:/etc/nginx/certs/
      - ./db/portal:/var/lib/mysql
    restart: always
    
# Mockit - DEVICE IMITATOR
  cisco_ios:
    image: registry.gitlab.com/slurpit.io/mockit:latest
    container_name: cisco_ios.netbox.slurpit.io
    environment:
      DEVICE_TYPE: cisco_ios
      SSH_USERNAME: admin
      SSH_PASSWORD: admin
    networks:
      netbox_slurpit-network:
        ipv4_address: 172.16.241.40

  mikrotik_routeros_v6:
    image: registry.gitlab.com/slurpit.io/mockit:latest
    container_name: mikrotik_routeros_v6.netbox.slurpit.io
    environment:
      DEVICE_TYPE: mikrotik_routeros
      DEVICE_VERSION: v6
      SSH_USERNAME: admin
      SSH_PASSWORD: admin
    networks:
      netbox_slurpit-network:
        ipv4_address: 172.16.241.41

  mikrotik_routeros_v7:
    image: registry.gitlab.com/slurpit.io/mockit:latest
    container_name: mikrotik_routeros_v7.netbox.slurpit.io
    environment:
      DEVICE_TYPE: mikrotik_routeros
      DEVICE_VERSION: v7
      SSH_USERNAME: admin
      SSH_PASSWORD: admin
    networks:
      netbox_slurpit-network:
        ipv4_address: 172.16.241.42

  arista_eos:
    image: registry.gitlab.com/slurpit.io/mockit:latest
    container_name: arista_eos.netbox.slurpit.io
    environment:
      DEVICE_TYPE: arista_eos
      SSH_USERNAME: admin
      SSH_PASSWORD: admin
    networks:
      netbox_slurpit-network:
        ipv4_address: 172.16.241.43

  cisco_nxos:
    image: registry.gitlab.com/slurpit.io/mockit:latest
    container_name: cisco_nxos.netbox.slurpit.io
    environment:
      DEVICE_TYPE: cisco_nxos
      SSH_USERNAME: admin
      SSH_PASSWORD: admin
    networks:
      netbox_slurpit-network:
        ipv4_address: 172.16.241.44

  hp_comware:
    image: registry.gitlab.com/slurpit.io/mockit:latest
    container_name: hp_comware.netbox.slurpit.io
    environment:
      DEVICE_TYPE: hp_comware
      SSH_USERNAME: admin
      SSH_PASSWORD: admin
    networks:
      netbox_slurpit-network:
        ipv4_address: 172.16.241.45

  juniper_junos:
    image: registry.gitlab.com/slurpit.io/mockit:latest
    container_name: juniper_junos.netbox.slurpit.io
    environment:
      DEVICE_TYPE: juniper_junos
      SSH_USERNAME: admin
      SSH_PASSWORD: admin
    networks:
      netbox_slurpit-network:
        ipv4_address: 172.16.241.46


networks:
  netbox_slurpit-network:
    driver: bridge
    external: false
    ipam:
      config:
        - subnet: 172.16.241.0/24