# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test

image: python:latest
before_script:
- pip install poetry, twine

build-main:
  stage: build
  script:
    - poetry install
    - poetry build
    - poetry check

    - echo "[pypi]" > ~/.pypirc
    - echo "username = __token__" >> ~/.pypirc
    - echo "password = $PYPI_TOKEN" >> ~/.pypirc
    - twine upload dist/*
  only:
    - main

build-other:
  stage: build
  script:
  - API_ENDPOINT=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages
  - poetry config repositories.gitlab $API_ENDPOINT/pypi
  - poetry config http-basic.gitlab gitlab-ci-token "$CI_JOB_TOKEN"
  - poetry publish --build --repository gitlab
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: never
    - when: on_success

sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
